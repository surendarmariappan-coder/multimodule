plugins {
    id 'base'
    id 'org.springframework.boot' version '3.5.6' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
}

allprojects {
    repositories {
        mavenCentral()
    }
}

// Manage versions via BOMs at the root; inherited by subprojects that apply the plugin
apply plugin: 'io.spring.dependency-management'

// Apply Java and Spring Boot only to the root to assemble an executable bootJar
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.5.6"
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = 'org.example'
    version = '0.0.1-SNAPSHOT'

    // Ensure BOM is visible to subprojects for version alignment
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.5.6"
        }
    }

    // Configure the Java toolchain only for projects that apply a Java plugin
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    // Add compiler flag to preserve parameter names
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-parameters'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

}

// Shared dependencies for the service modules (only apply to services, not common)
configure([project(":department-service"), project(":employee-service")]) {
    // Don't apply Spring Boot plugin here; these are library modules
    dependencies {
        implementation project(':common')

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        runtimeOnly 'com.h2database:h2'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }
}

// Root assembly module depends on service modules to include them in the executable jar
dependencies {
    implementation project(':common')
    implementation project(':employee-service')
    implementation project(':department-service')

    // Root needs the starters explicitly so bootRun/bootJar can resolve versions (managed by BOM)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'com.h2database:h2'
}

// Optional: set the main class explicitly to help bootJar
springBoot {
    mainClass = 'org.example.AssemblyApplication'
}

// Aggregate: ensure root build builds all modules (safely wire after each project is evaluated)
tasks.named("build") {
    group = "build"
    description = "Builds all subprojects"
    dependsOn(subprojects.collect {it.tasks.named("build")})
}

// Convenience run task for IntelliJ: run the root Spring Boot app
tasks.register("run") {
    group = "application"
    description = "Runs the root Spring Boot application"
    dependsOn("bootRun")
}
